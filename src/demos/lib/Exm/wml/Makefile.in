# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AGE = @AGE@
AS = @AS@
CC = @CC@
CDE_CONFIGURATION_TOP = @CDE_CONFIGURATION_TOP@
CDE_INSTALLATION_TOP = @CDE_INSTALLATION_TOP@
CPP = @CPP@
CURRENT = @CURRENT@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
HAVE_LIB = @HAVE_LIB@
INCDIR = @INCDIR@
LEX = @LEX@
LIB = @LIB@
LIBDIR = @LIBDIR@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIB = @LTLIB@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
REVISION = @REVISION@
SLIDE_DIST = @SLIDE_DIST@
STRIP = @STRIP@
VERSION = @VERSION@
XMBINDDIR_FALLBACK = @XMBINDDIR_FALLBACK@
X_XMU = @X_XMU@
YACC = @YACC@

MAINTAINERCLEANFILES = Makefile.in

EXTRA_DIST = Exm.wml
CLEANFILES = Exm.wmd $(REPORT) $(WMLTARGETS) tokens.dat wml-uil.mm

AM_YFLAGS = -d

noinst_PROGRAMS = wmldbcreate

WMLDIR = $(top_srcdir)/tools/wml

INCLUDES = -I$(top_srcdir)/lib         -I$(top_builddir)/lib 	-I$(top_srcdir)/include 	-I$(srcdir)/../.. 	-I$(top_srcdir)/tools/wml 	-I$(top_builddir)/tools/wml 	-I$(top_builddir)/clients/uil 	${X_CFLAGS} 


LDADD = $(top_builddir)/lib/Xm/libXm.la

DISTCLEANFILES = motif.wmd

WMDTABLE = Exm.wmd

# INCLUDES = -I. -I$(INCLUDESRC) -I$(MINCLUDESRC) -I$(MLIBSRC) -I../../. -I$(MTOP)/include
# DEPLIBS = $(DEPXMLIB)  $(DEPXTOOLLIB) $(DEPXLIB)
# LOCAL_LIBRARIES = XmClientLibs
# 
# WMLDIR = $(MTOP)/tools/wml
TABLE = Exm.wml
# WMDTABLE = Exm.wmd
# WMLTOOLS = $(WMLDIR)/wml $(WMLDIR)/wmluiltok
REPORT = wml.report
UILY = $(WMLDIR)/Uil.y
YACCTARGETS = UilLexPars.c	UilLexPars.h

WMLTARGETS = UilConst.h	UilKeyTab.h	 	UilSymArTa.h	UilSymArTy.h	UilSymCSet.h	UilSymCtl.h 	UilSymEnum.h	UilSymGen.h	UilSymNam.h	UilSymRArg.h 	UilSymReas.h	UilTokName.h	UilUrmClas.h	UilSymChCl.h 	UilSymChTa.h


TARGETS = $(YACCTARGETS) $(WMLTARGETS)	
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../../../include/config.h
CONFIG_CLEAN_FILES = 
noinst_PROGRAMS =  wmldbcreate$(EXEEXT)
PROGRAMS =  $(noinst_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../../../include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
wmldbcreate_SOURCES = wmldbcreate.c
wmldbcreate_OBJECTS =  wmldbcreate.$(OBJEXT)
wmldbcreate_LDADD = $(LDADD)
wmldbcreate_DEPENDENCIES =  $(top_builddir)/lib/Xm/libXm.la
wmldbcreate_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  README Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = wmldbcreate.c
OBJECTS = wmldbcreate.$(OBJEXT)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps demos/lib/Exm/wml/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

wmldbcreate$(EXEEXT): $(wmldbcreate_OBJECTS) $(wmldbcreate_DEPENDENCIES)
	@rm -f wmldbcreate$(EXEEXT)
	$(LINK) $(wmldbcreate_LDFLAGS) $(wmldbcreate_OBJECTS) $(wmldbcreate_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = demos/lib/Exm/wml

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
mostlyclean-am:  mostlyclean-noinstPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-noinstPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstPROGRAMS distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


all: Exm.wmd

$(WMDTABLE): wmldbcreate $(TARGETS)
	./wmldbcreate -o $@
# 
# SRCS = wmldbcreate.c
# 
# NormalLibraryObjectRule()
#  
# all::   includes $(WMDTABLE)
# 
# install:: all
#  
UilLexPars.c UilLexPars.h: $(UILY)

$(TARGETS):	$(TABLE) $(WMLDIR)/motif.wml
	$(RM) $(TARGETS) $(REPORT) wml-uil.mm
# 	$(YACC) -d $(YACCFLAGS) $(UILY)
# 	$(MV) y.tab.c UilLexPars.c
# 	$(MV) y.tab.h UilLexPars.h
	$(top_builddir)/tools/wml/wmluiltok < $(UILY) > tokens.dat
# 	$(RM) wml-uil.mm
	$(RM) Exm.h
	$(LN_S) $(srcdir)/$(TABLE) ./Exm.h
	$(CPP) -I$(WMLDIR) Exm.h | $(top_builddir)/tools/wml/wml
	$(RM) Exm.h
# 	$(RM) tokens.dat
# 
# $(WMDTABLE):	wmldbcreate
# 	$(CLIENTENVSETUP) ./wmldbcreate -o $@
# 
# NormalProgramTarget(wmldbcreate,wmldbcreate.o,$(DEPLIBS),$(LOCAL_LIBRARIES),$(SYSLIBS))
# 
# UilDBDef.h:    $(WMLDIR)/UilDBDef.h
# 	rm -f UilDBDef.h
# 	ln -s $(WMLDIR)/UilDBDef.h UilDBDef.h
# 
# clean::
# 	$(RM) $(TARGETS) $(WMDTABLE) $(REPORT) \
# 	*.mm *.sdml *.txt tokens.dat *.h wmldbcreate UilLexPars.c *~
# 
# DependTarget()
# 
# includes:: $(TARGETS)  UilDBDef.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
